[{"title":"Hello World","url":"/2021/05/19/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","categories":["记录"]},{"title":"javaBean简记","url":"/2021/05/20/javaBean%E7%AE%80%E8%AE%B0/","content":"<hr>\n<h2 id=\"JavaBean的使用\"><a href=\"#JavaBean的使用\" class=\"headerlink\" title=\"JavaBean的使用\"></a>JavaBean的使用</h2><p>JavaBean 是<mark>特殊的 Java 类</mark>，使用 Java 语言书写，并且遵守 JavaBean API 规范。</p>\n<p>接下来给出的是 JavaBean 与其它 Java 类相比而言独一无二的特征：</p>\n<ul>\n<li>提供一个默认的无参构造函数。</li>\n<li>需要被序列化并且实现了 Serializable 接口。</li>\n<li>可能有一系列可读写属性。</li>\n<li>可能有一系列的 getter 或 <strong>setter</strong> 方法。<span id=\"more\"></span></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.runoob;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentsBean</span> <span class=\"keyword\">implements</span> <span class=\"title\">java</span>.<span class=\"title\">io</span>.<span class=\"title\">Serializable</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> String firstName = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> String lastName = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">StudentsBean</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getFirstName</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> firstName;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getLastName</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> lastName;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setFirstName</span><span class=\"params\">(String firstName)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.firstName = firstName;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLastName</span><span class=\"params\">(String lastName)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.lastName = lastName;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(<span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译后获得 <strong>StudentBean.class</strong> 文件，将其拷贝到 <strong>&lt;JSP 项目&gt;/WebContent/WEB-INF/classes/com/runoob</strong></p>\n<h2 id=\"访问javaBean\"><a href=\"#访问javaBean\" class=\"headerlink\" title=\"访问javaBean\"></a>访问javaBean</h2><figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;jsp:useBean id = <span class=\"string\">&quot;bean的名字&quot;</span> scope=<span class=\"string\">&quot;bean的作用域&quot;</span> typeSpec/&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;jsp:useBean id = <span class=\"string\">&quot;date&quot;</span> <span class=\"class\"><span class=\"keyword\">class</span> </span>= <span class=\"string\">&quot;java.util.Date&quot;</span>/&gt;</span><br><span class=\"line\">&lt;p&gt;</span><br><span class=\"line\">    日期为: &lt;%= date%&gt;</span><br><span class=\"line\">&lt;/p&gt;</span><br><span class=\"line\">&lt;%--可以把date看成一个Date类型的变量,<span class=\"class\"><span class=\"keyword\">class</span>表示类型--%&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"对象的属性\"><a href=\"#对象的属性\" class=\"headerlink\" title=\"对象的属性\"></a>对象的属性</h3><figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;jsp:useBean id = <span class=\"string\">&quot;id&quot;</span> <span class=\"class\"><span class=\"keyword\">class</span> </span>= <span class=\"string\">&quot;bean 编译的类&quot;</span> scope = <span class=\"string\">&quot;bean作用域&quot;</span>&gt;</span><br><span class=\"line\">    &lt;jsp:setProperty name = <span class=\"string\">&quot;bean的id&quot;</span> property=<span class=\"string\">&quot;属性名&quot;</span></span><br><span class=\"line\">    \t\t\tvalue=<span class=\"string\">&quot;value&quot;</span>/&gt;</span><br><span class=\"line\">    &lt;jsp:getProperty name = <span class=\"string\">&quot;bean的id&quot;</span> property=<span class=\"string\">&quot;属性名&quot;</span>/&gt;</span><br><span class=\"line\">    ......</span><br><span class=\"line\">&lt;/jsp:useBean&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>把”bean的id”当作一个java对象，property表示该对象的某一个属性或变量,value可以设置或获取该变量的值</strong></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;jsp:useBean id=<span class=\"string\">&quot;students&quot;</span> </span><br><span class=\"line\">                    <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;com.runoob.StudentsBean&quot;</span>&gt; </span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">&quot;students&quot;</span> property=<span class=\"string\">&quot;firstName&quot;</span></span><br><span class=\"line\">                    value=<span class=\"string\">&quot;小强&quot;</span>/&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">&quot;students&quot;</span> property=<span class=\"string\">&quot;lastName&quot;</span> </span><br><span class=\"line\">                    value=<span class=\"string\">&quot;王&quot;</span>/&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">&quot;students&quot;</span> property=<span class=\"string\">&quot;age&quot;</span></span><br><span class=\"line\">                    value=<span class=\"string\">&quot;10&quot;</span>/&gt;</span><br><span class=\"line\">&lt;/jsp:useBean&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p&gt;学生名字: </span><br><span class=\"line\">   &lt;jsp:getProperty name=<span class=\"string\">&quot;students&quot;</span> property=<span class=\"string\">&quot;firstName&quot;</span>/&gt;</span><br><span class=\"line\">&lt;/p&gt;</span><br><span class=\"line\">&lt;p&gt;学生姓氏: </span><br><span class=\"line\">   &lt;jsp:getProperty name=<span class=\"string\">&quot;students&quot;</span> property=<span class=\"string\">&quot;lastName&quot;</span>/&gt;</span><br><span class=\"line\">&lt;/p&gt;</span><br><span class=\"line\">&lt;p&gt;学生年龄: </span><br><span class=\"line\">   &lt;jsp:getProperty name=<span class=\"string\">&quot;students&quot;</span> property=<span class=\"string\">&quot;age&quot;</span>/&gt;</span><br><span class=\"line\">&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n\n<p> <strong>&lt;jsp:useBean id=”beanName” class=”package.class”** **scope=”page|request|session|application”/&gt;</strong></p>\n<p>在<a href=\"jsp:useBean\">jsp:useBean</a>块中id表示的对象名是已经被实例化的，可以直接使用<mark>对象.方法名</mark>调用方法设置参数。在&lt;%%&gt;块中也可以实现和调用java代码。</p>\n","categories":["记录"],"tags":["网页"]},{"title":"大整数类","url":"/2021/05/20/%E5%A4%A7%E6%95%B4%E6%95%B0%E7%B1%BB/","content":"<h2 id=\"大整数模拟四则运算\"><a href=\"#大整数模拟四则运算\" class=\"headerlink\" title=\"大整数模拟四则运算\"></a>大整数模拟四则运算</h2><p>用结构体模拟大整数(很长很多位的数字)四则运算<span id=\"more\"></span></p>\n<h3 id=\"数组存储\"><a href=\"#数组存储\" class=\"headerlink\" title=\"数组存储\"></a>数组存储</h3><table><tr><td bgcolor=\"#54FF9F\">整数高位存储在数组高位，整数的低位存储在数组的低位</td></tr></table>\n\n\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">bign</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> d[<span class=\"number\">1000</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len; <span class=\"comment\">// 记录长度</span></span><br><span class=\"line\">    <span class=\"built_in\">bign</span>()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(d,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> d);</span><br><span class=\"line\">        len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>输入大整数时，都是字符串读入，再把字符串另存至 <code>bign 结构体</code>，倒序存储</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">bign <span class=\"title\">change</span><span class=\"params\">(<span class=\"keyword\">char</span> str[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    bign a;</span><br><span class=\"line\">    a.len = <span class=\"built_in\">strlen</span>(str);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a.len;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        a.d[i] = str[len-i<span class=\"number\">-1</span>] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"比较整数大小\"><a href=\"#比较整数大小\" class=\"headerlink\" title=\" 比较整数大小\"></a><mark> 比较整数大小</mark></h3><ul>\n<li>比较长度</li>\n<li>如果长度相等，则从高位至低位依次比较，直到出现某一位不等，就可以找出大小。</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(bign a,bign b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.len &gt; b.len)\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>; <span class=\"comment\">// a大</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a.len &lt; b.len) <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = a.len - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>;i--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a.d[i] &gt; b.d[i])\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.d[i] &lt; b.d[i])\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  <span class=\"comment\">// 相等</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"大整数四则运算\"><a href=\"#大整数四则运算\" class=\"headerlink\" title=\"大整数四则运算\"></a>大整数四则运算</h3><figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">bign <span class=\"title\">add</span><span class=\"params\">(bign a,bign b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    bign c;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> carry = <span class=\"number\">0</span>; <span class=\"comment\">// 进位</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a.len || i &lt; b.len;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> tmp = a.d[i] + b.d[i] + carry;</span><br><span class=\"line\">        c.d[c.len++] = tmp % <span class=\"number\">10</span>;</span><br><span class=\"line\">        carry = tmp / <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(carry != <span class=\"number\">0</span>) <span class=\"comment\">// 最后还剩了进位直接赋给高位</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        c.d[c.len++] = carry;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><mark>总代码加法</mark></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 大整数高精度算法c++写法</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">bign</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> d[<span class=\"number\">1000</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> len;</span><br><span class=\"line\">\t<span class=\"built_in\">bign</span>() &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(d, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span> d);</span><br><span class=\"line\">\t\tlen = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">bign <span class=\"title\">change</span><span class=\"params\">(string str)</span> </span>&#123;</span><br><span class=\"line\">\tbign a;</span><br><span class=\"line\">\ta.len = str.<span class=\"built_in\">length</span>(); <span class=\"comment\">// 数字长度</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a.len; i++) &#123;</span><br><span class=\"line\">\t\ta.d[i] = str[a.len - i - <span class=\"number\">1</span>] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">bign <span class=\"title\">add</span><span class=\"params\">(bign a, bign b)</span> </span>&#123;</span><br><span class=\"line\">\tbign c;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> carry = <span class=\"number\">0</span>; <span class=\"comment\">// 进位</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a.len || i &lt; b.len; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> tmp = a.d[i] + b.d[i] + carry;</span><br><span class=\"line\">\t\tc.d[c.len++] = tmp % <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\tcarry = tmp / <span class=\"number\">10</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (carry != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tc.d[c.len++] = carry;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tstring s1, s2;</span><br><span class=\"line\">\tcin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class=\"line\">\tbign a = <span class=\"built_in\">change</span>(s1);</span><br><span class=\"line\">\tbign b = <span class=\"built_in\">change</span>(s2);</span><br><span class=\"line\">\tbign res = <span class=\"built_in\">add</span>(a, b);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;结果是&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = res.len - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcout &lt;&lt; res.d[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"高精度减法-大数减去小数\"><a href=\"#高精度减法-大数减去小数\" class=\"headerlink\" title=\"高精度减法(大数减去小数)\"></a>高精度减法(大数减去小数)</h3><figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">bign <span class=\"title\">sub</span><span class=\"params\">(bign a,bign b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    bign c;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; a.len || i &lt; b.len;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.d[i] &lt; b.d[i])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            a.d[i+<span class=\"number\">1</span>] -= <span class=\"number\">1</span>;</span><br><span class=\"line\">            a.d[i] += <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        c.d[c.len++] = a.d[i] - b.d[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(c.len - <span class=\"number\">1</span> &gt;= <span class=\"number\">1</span> &amp;&amp; c.d[c.len<span class=\"number\">-1</span>] == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        c.len--; <span class=\"comment\">// 去掉前面的0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"高精度乘法\"><a href=\"#高精度乘法\" class=\"headerlink\" title=\"高精度乘法\"></a>高精度乘法</h3><p>​     1   4  7</p>\n<p>x        3   5</p>\n<p>​    2    4   5</p>\n<p>1  4    0</p>\n<p>3   5</p>\n<p>把147看作bign类型，35看作 int 类型</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">bign <span class=\"title\">multi</span><span class=\"params\">(bign a,<span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    bign c;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> carry = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; a.len;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> t = a.d[i] * b + carry;</span><br><span class=\"line\">        c.d[c.len++] = t % <span class=\"number\">10</span>; <span class=\"comment\">// 个位作为该位结果</span></span><br><span class=\"line\">        carry = t / <span class=\"number\">10</span>; <span class=\"comment\">// 高位部分作为新的进位 </span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(carry != <span class=\"number\">0</span>) <span class=\"comment\">// 乘法可能不止一位进位</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        c.d[c.len++] =  carry % <span class=\"number\">10</span>;</span><br><span class=\"line\">        carry /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":["算法"],"tags":["算法","模拟"]},{"title":"排序算法","url":"/2021/05/21/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","content":"<h2 id=\"算法分类\"><a href=\"#算法分类\" class=\"headerlink\" title=\"算法分类\"></a>算法分类</h2><h3 id=\"1、排序\"><a href=\"#1、排序\" class=\"headerlink\" title=\"1、排序\"></a>1、排序</h3><ul>\n<li>比较类排序</li>\n</ul>\n<h3 id=\"2、复杂度\"><a href=\"#2、复杂度\" class=\"headerlink\" title=\"2、复杂度\"></a>2、复杂度</h3><p><mark>相关概念</mark></p>\n<ul>\n<li>稳定：如果 a 本来在 b 前面，而a = b ，排序之后 a 仍然在 b 的前面</li>\n<li>不稳定：如果 a 本来 在b的前面，而 a = b ，排序之后 a 可能在 b 的后面</li>\n<li>时间复杂度：对排序数据的<mark>总的操作数</mark>，反映当 n 变化时，操作次数呈什么变化</li>\n<li>空间复杂度： 指算法计算机内执行时所需<mark>存空间</mark>的度量，也是数据规模 n 的函数</li>\n</ul>\n<span id=\"more\"></span>\n\n<h3 id=\"几种常见排序-已学\"><a href=\"#几种常见排序-已学\" class=\"headerlink\" title=\"几种常见排序(已学)\"></a>几种常见排序(已学)</h3><h4 id=\"1、冒泡排序-Bubble-Sort\"><a href=\"#1、冒泡排序-Bubble-Sort\" class=\"headerlink\" title=\"1、冒泡排序(Bubble Sort)\"></a>1、<strong>冒泡排序(Bubble Sort)</strong></h4><p>~~注：重复地走访序列，一次比较两个元素，如果顺序错误就交换过来，重复地进行直到没有再需要交换，也就说该数列排序完成——-&gt;这个算法的名字是因为越小的元素会<mark>经由交换慢慢“浮”到顶端</mark></p>\n<p><u>动图展示</u></p>\n<img src=\"/2021/05/21/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/aoKJdf.gif\" alt=\"aoKJdf.gif\" border=\"0\">\n\n<p>代码实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">function <span class=\"title\">bubbleSort</span><span class=\"params\">(arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = arr.length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; len - <span class=\"number\">1</span> - i; j++) &#123;  <span class=\"comment\">//每次循环最大的元素都被放到最后，就不用管了</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arr[j] &gt; arr[j+<span class=\"number\">1</span>]) &#123;        <span class=\"comment\">// 相邻元素两两对比</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> temp = arr[j+<span class=\"number\">1</span>];        <span class=\"comment\">// 元素交换</span></span><br><span class=\"line\">                arr[j+<span class=\"number\">1</span>] = arr[j];</span><br><span class=\"line\">                arr[j] = temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>课上讲的模板类写法：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">template</span>&lt;class T&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">mySwap</span><span class=\"params\">(T &amp;x,T &amp;y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tT temp = x;</span><br><span class=\"line\">\tx = y;</span><br><span class=\"line\">\ty = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">template</span>&lt;class T&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">bubbldeSort</span><span class=\"params\">(T a[],<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i= n<span class=\"number\">-1</span> ;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> lastExchange = <span class=\"number\">0</span>;<span class=\"comment\">//每次都值为 0 ，如果下面的 if语句 不成立，退出循环，说明排序完成</span></span><br><span class=\"line\">        <span class=\"comment\">//(a[j]&lt;a[j+1])都成立</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;i;j++)</span><br><span class=\"line\">\t  <span class=\"keyword\">if</span>(a[j+<span class=\"number\">1</span>]&lt;a[j])</span><br><span class=\"line\">\t  &#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">mySwap</span>(a[j],a[j+<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t  lastExchange = j;  <span class=\"comment\">//第一次循环这个 j = n-1，a[j+1]包括后面的数就不用管了</span></span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\">\t  i = lastExchange;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2、选择排序-Selection-Sort\"><a href=\"#2、选择排序-Selection-Sort\" class=\"headerlink\" title=\"2、选择排序(Selection Sort)\"></a>2、选择排序(Selection Sort)</h4><p>~~注：首先在未排序序列中找到最小(大)的元素，存放到<mark>排序序列的起始位置</mark>，然后再从剩余未排序序列元素中继续寻找最小元素，然后放到<mark>已排序序列的末尾</mark>。以此类推，直到排序完毕。</p>\n<p>动图</p>\n<p><img src=\"/2021/05/21/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/aoKYo8.gif\" alt=\"aoKYo8.gif\" border=\"0\">](<a href=\"https://imgchr.com/i/aItpqJ\">https://imgchr.com/i/aItpqJ</a>)</p>\n<p>代码实现;</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">function <span class=\"title\">selectionSort</span><span class=\"params\">(arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = arr.length;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> minIndex, temp;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        minIndex = i; <span class=\"comment\">//记录未排序的第一个数，方便后面最小的数与其交换</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = i + <span class=\"number\">1</span>; j &lt; len; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arr[j] &lt; arr[minIndex]) &#123;     <span class=\"comment\">// 寻找最小的数</span></span><br><span class=\"line\">                minIndex = j;                 <span class=\"comment\">// 将最小数的索引保存</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        temp = arr[i];</span><br><span class=\"line\">        arr[i] = arr[minIndex];</span><br><span class=\"line\">        arr[minIndex] = temp; <span class=\"comment\">//将 i 和最小的数交换 ，然后 i 往后移一位，前面是已经排好的序列</span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3、插入排序\"><a href=\"#3、插入排序\" class=\"headerlink\" title=\"3、插入排序\"></a>3、插入排序</h4><p>~注：描述—&gt; </p>\n<ul>\n<li>第一个元素已经排序</li>\n<li>取出下一个元素，在已经排序的元素序列中<mark>从后往前</mark>扫描</li>\n<li>如果该元素(已排序)大于新元素，将<mark>该元素移至下一个位置</mark></li>\n<li>重复3，直到找到<mark>已排序的元素小于或等于新元素</mark>的位置</li>\n</ul>\n<img src=\"/2021/05/21/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/aoKNFS.gif\" alt=\"aoKNFS.gif\" border=\"0\">\n\n<p>代码实现：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">function <span class=\"title\">insertionSort</span><span class=\"params\">(arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = arr.length;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> preIndex, current;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        preIndex = i -<span class=\"number\">1</span>; </span><br><span class=\"line\">        current = arr[i];  <span class=\"comment\">//前面的数都是已经排好序的 </span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (preIndex &gt;= <span class=\"number\">0</span> &amp;&amp;  arr[preIndex] &gt; current) &#123; <span class=\"comment\">//后面的数比前面的大就循环，如果小于或等于就停止循环，进行插入</span></span><br><span class=\"line\">            arr[preIndex + <span class=\"number\">1</span>] = arr[preIndex]; <span class=\"comment\">//往后挪位置</span></span><br><span class=\"line\">            preIndex--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        arr[preIndex+<span class=\"number\">1</span>] = current;  <span class=\"comment\">//上面arr[preIndex]往后移了，此时arr[preIndex]为无用值，又减了一，所以要加1；</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//注释1：从下标为1的元素开始遍历，记作temp--&gt;然后从temp向前遍历将元素往后挪位，直到不满足条件插入此元素</span></span><br></pre></td></tr></table></figure>\n\n<p>c++模板类写法：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">template</span>&lt;class T&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insertionSort</span><span class=\"params\">(T a[],<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,j;</span><br><span class=\"line\">\tT temp;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\"> \t<span class=\"keyword\">int</span> j=i;</span><br><span class=\"line\"> \tT temp = a[i];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(j&gt;<span class=\"number\">0</span> &amp;&amp; temp&lt;a[j<span class=\"number\">-1</span>])</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta[j]=a[j<span class=\"number\">-1</span>]; <span class=\"comment\">//这里j值并没有改变，下面减去一才是要填充的位置</span></span><br><span class=\"line\">\t\tj--;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ta[j]=temp; <span class=\"comment\">//a[j-1]被移动到后面的序列去了， j-1是无用数据</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"number\">3</span> <span class=\"number\">2</span> <span class=\"number\">5</span> <span class=\"number\">4</span> <span class=\"number\">9</span> <span class=\"number\">8</span> <span class=\"number\">7</span> temp = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">5</span> <span class=\"number\">4</span> <span class=\"number\">9</span> <span class=\"number\">8</span> <span class=\"number\">7</span> temp = <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">5</span> <span class=\"number\">9</span> <span class=\"number\">8</span> <span class=\"number\">7</span> temp = <span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"comment\">//注释2：从下标为1开始循环(因为要j-1不能越界)，如果前面的元素比temp(循环选定元素)大，说明要后退一位，以便留一个位置给temp，就这样一直后移直到找到一个数 &lt; temp</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4、计数排序\"><a href=\"#4、计数排序\" class=\"headerlink\" title=\"4、计数排序\"></a>4、计数排序</h4><p><strong>适用于在较小范围内的数字；</strong></p>\n<ul>\n<li>计数排序可以不用进行比较两数大小的操作</li>\n<li>另外用一个数组记录出现数字的次数，<mark>下标表示数字，数组下标对应的元素表示该数字出现的次数</mark></li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">countSort</span><span class=\"params\">(vector&lt;<span class=\"keyword\">int</span>&gt;&amp; array)</span></span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">int</span> max = array[<span class=\"number\">0</span>];</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;array.<span class=\"built_in\">size</span>();i++)&#123;<span class=\"comment\">// 找出最大值</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span>(array[i]&gt;max)&#123;</span><br><span class=\"line\">           max = array[i];</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"function\">vector&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">countArray</span><span class=\"params\">(max+<span class=\"number\">1</span>)</span></span>; <span class=\"comment\">// 容量为max+1 </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;array.<span class=\"built_in\">size</span>();i++)&#123;</span><br><span class=\"line\">        countArray[array[i]]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;<span class=\"comment\">// countArray下标代表数字，对应的元素值表示</span></span><br><span class=\"line\">    <span class=\"comment\">//出现的次数</span></span><br><span class=\"line\">    ================================</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;countArray.<span class=\"built_in\">size</span>();i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;countArray[i];j++)&#123;</span><br><span class=\"line\">            array[index++] = i;</span><br><span class=\"line\">            <span class=\"comment\">// 直接修改原数组(参数)</span></span><br><span class=\"line\">            ================================</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> <span class=\"built_in\">main</span>()&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"keyword\">int</span>&gt; a=&#123;<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>,<span class=\"number\">1</span>,<span class=\"number\">7</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">countSort</span>(a);</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(vector&lt;<span class=\"keyword\">int</span>&gt;:: iterator it = a.<span class=\"built_in\">begin</span>();it!=a.<span class=\"built_in\">end</span>();it++ )&#123;</span><br><span class=\"line\">       cout&lt;&lt;*it&lt;&lt;endl;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5、快速排序\"><a href=\"#5、快速排序\" class=\"headerlink\" title=\"5、快速排序\"></a>5、快速排序</h4><ul>\n<li>基准元素</li>\n<li>两边向中间循环查找</li>\n</ul>\n<p><mark>双边循环</mark></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 10</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sawp</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;a,<span class=\"keyword\">int</span> &amp;b)</span><span class=\"comment\">// 交换两个数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">    temp = a;</span><br><span class=\"line\">    a = b;</span><br><span class=\"line\">    b = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">quickSort</span><span class=\"params\">(<span class=\"keyword\">int</span> left,<span class=\"keyword\">int</span> right,vector&lt;<span class=\"keyword\">int</span>&gt; &amp; a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(left &gt;= right)</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> i,j,base;</span><br><span class=\"line\">    i = left, j =right;</span><br><span class=\"line\">    base = a[left];<span class=\"comment\">// 基准元素</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &lt; j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(a[j]&gt;=base &amp;&amp; i &lt; j) <span class=\"comment\">//i &lt;j 基本条件</span></span><br><span class=\"line\">        j--;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(a[i]&lt;=base &amp;&amp; i &lt; j)</span><br><span class=\"line\">        i++;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; j) <span class=\"comment\">// 有可能此时i==j</span></span><br><span class=\"line\">        <span class=\"built_in\">swap</span>(a[i],a[j]); <span class=\"comment\">//交换左边和右边的值，一个大于基准值，一个小于基准值</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    a[left] = a[i];</span><br><span class=\"line\">    a[i] = base;</span><br><span class=\"line\">    <span class=\"built_in\">quickSort</span>(left,i<span class=\"number\">-1</span>,a);<span class=\"comment\">//对剩余的部分进行快速排序</span></span><br><span class=\"line\">    <span class=\"built_in\">quickSort</span>(i+<span class=\"number\">1</span>,right,a);<span class=\"comment\">//</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><mark>y总模板</mark></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1000010</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> q[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">quick_sort</span><span class=\"params\">(<span class=\"keyword\">int</span> q[], <span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (l &gt;= r) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = l - <span class=\"number\">1</span>, j = r + <span class=\"number\">1</span>, x = q[l + r &gt;&gt; <span class=\"number\">1</span>];</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">do</span> i ++ ; <span class=\"keyword\">while</span> (q[i] &lt; x);</span><br><span class=\"line\">        <span class=\"keyword\">do</span> j -- ; <span class=\"keyword\">while</span> (q[j] &gt; x);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; j) <span class=\"built_in\">swap</span>(q[i], q[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">quick_sort</span>(q, l, j);</span><br><span class=\"line\">    <span class=\"built_in\">quick_sort</span>(q, j + <span class=\"number\">1</span>, r);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">quick_sort</span>(q, <span class=\"number\">0</span>, n - <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, q[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p><mark>单边循环</mark>&gt;</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 10</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sawp</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;a, <span class=\"keyword\">int</span> &amp;b)</span> </span>&#123; <span class=\"comment\">// 交换两个数</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">\ttemp = a;</span><br><span class=\"line\">\ta = b;</span><br><span class=\"line\">\tb = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">quickSort</span><span class=\"params\">(vector&lt;<span class=\"keyword\">int</span>&gt; &amp;a, <span class=\"keyword\">int</span> L, <span class=\"keyword\">int</span> R)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L&gt;=R)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>; <span class=\"comment\">// 递归结束条件</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"comment\">// L,R表示起始和终点下标</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> p = a[L];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> mark = L;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = L + <span class=\"number\">1</span>; i &lt;= R; i++) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[i] &lt; p) &#123;</span><br><span class=\"line\">            cout&lt;&lt;p&lt;&lt;<span class=\"string\">&quot;  &gt;  &quot;</span>&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class=\"line\">            cout&lt;&lt;<span class=\"string\">&quot;mark值为&quot;</span>&lt;&lt;mark&lt;&lt;endl;</span><br><span class=\"line\">\t\t\tmark++;</span><br><span class=\"line\">            cout&lt;&lt;<span class=\"string\">&quot;mark值为&quot;</span>&lt;&lt;mark&lt;&lt;endl;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">swap</span>(a[mark], a[i]); <span class=\"comment\">//此时mark表示a[mark]&gt;p,把小的</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 提到前面来</span></span><br><span class=\"line\">          </span><br><span class=\"line\">   </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"built_in\">swap</span>(a[mark], a[L]);</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"built_in\">quickSort</span>(a, L, mark - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">quickSort</span>(a, mark + <span class=\"number\">1</span>, R);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"keyword\">int</span>&gt; a = &#123;<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>,<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">quickSort</span>(a, <span class=\"number\">0</span>, a.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; a[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["算法"],"tags":["算法","排序"]},{"title":"背包汇总","url":"/2021/05/20/%E8%83%8C%E5%8C%85%E6%B1%87%E6%80%BB/","content":"<hr>\n<h2 id=\"categories-学习\"><a href=\"#categories-学习\" class=\"headerlink\" title=\"categories: 学习\"></a>categories: 学习</h2><h1 id=\"背包问题汇总\"><a href=\"#背包问题汇总\" class=\"headerlink\" title=\"背包问题汇总\"></a>背包问题汇总</h1><h3 id=\"01背包问题-easy\"><a href=\"#01背包问题-easy\" class=\"headerlink\" title=\"01背包问题(easy)\"></a>01背包问题(easy)</h3><p>有 N 件物品和一个容量是 V 的背包。<mark>每件物品只能使用一次</mark>。</p>\n<p>第 i 件物品的体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。<br>输出最大价值。</p>\n <span id=\"more\"></span>\n\n<p>输入格式</p>\n<p>第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。</p>\n<p>接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 ii 件物品的体积和价值。</p>\n<p>输出格式</p>\n<p>输出一个整数，表示最大价值。</p>\n<p>数据范围</p>\n<p>0&lt;N,V≤10000&lt;N,V≤1000<br>0&lt;vi, wi ≤10000&lt;vi, wi≤1000</p>\n<p>输入样例</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">4 5</span><br><span class=\"line\">1 2</span><br><span class=\"line\">2 4</span><br><span class=\"line\">3 4</span><br><span class=\"line\">4 5</span><br></pre></td></tr></table></figure>\n\n<p>输出样例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">8</span><br></pre></td></tr></table></figure>\n\n<p> 用集合和状态DP分析:</p>\n<p><img src=\"/2021/05/20/%E8%83%8C%E5%8C%85%E6%B1%87%E6%80%BB/d1.png\" alt=\"d1\"></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1010</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> v[N], w[N]; <span class=\"comment\">// 体积和价值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N][N]; <span class=\"comment\">// f[i][j], j体积下前i个物品的最大价值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n, m;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m; <span class=\"comment\">// n件物品和背包容量m</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++) &#123; <span class=\"comment\">// 此背包有选与不选两种情况</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (j &lt; v[i]) &#123; <span class=\"comment\">// 如果背包容量比这件物品的体积还小</span></span><br><span class=\"line\">\t\t\t\tf[i][j] = f[i - <span class=\"number\">1</span>][j]; <span class=\"comment\">// 那么此时这个物品就不用管</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\tcout &lt;&lt; i &lt;&lt; &#x27; &#x27; &lt;&lt; j &lt;&lt; &#x27; &#x27; &lt;&lt; f[i][j] &lt;&lt; endl;</span></span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\tf[i][j] = <span class=\"built_in\">max</span>(f[i - <span class=\"number\">1</span>][j - v[i]] + w[i], f[i - <span class=\"number\">1</span>][j]); <span class=\"comment\">// 状态转移方程,有两种情况取或者不取</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\tcout &lt;&lt; i &lt;&lt; &#x27; &#x27; &lt;&lt; j &lt;&lt; &#x27; &#x27; &lt;&lt; f[i][j] &lt;&lt; endl;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// f[i][j] 表示 体积为j下前i个物品的价值最大值</span></span><br><span class=\"line\">\tcout &lt;&lt; f[n][m] &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// f[i-1][j] 可以看作是上一次循环计算的结果，因为只用到了一次，可以直接变为一维数组优化空间</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// 优化版本</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1010</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> v[N], w[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n, m;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt;m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n;i++)</span><br><span class=\"line\">        cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i &lt;= n;i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = m; j &gt;= v[i];j--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">                f[j] = <span class=\"built_in\">max</span>(f[j - v[i]] + w[i],f[j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    cout &lt;&lt; f[m]&lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><mark>优化分析</mark><br>看上面的输出数据, 我们会发现其实二维表里有很多重复的. 这是因为, 从递归式的特点来看, 我们只是基于第i-1层对第i层做了更新, 而第i-1层该是什么样还是什么样.</p>\n<p>换言之, 我们只需要知道最后一层的情况, 而不需要存储之前的结果.</p>\n<p>看上面的表格, 其实我们最后输出的是最右下角的值.</p>\n<p>我们这个时候可以得到一个递归式</p>\n<p> f[v]=max{f[v], f[v-vi]+wi}</p>\n<p>理解起来, 是和上面讲的一样的.<br>但是, 在具体的实现层面上, 有一个很反直觉的点:</p>\n<p>不同于二维dp的双重循环, 空间优化版本的内层循环必须是逆序的.</p>\n<p>如果这一点理解了, 整个程序的实现就非常容易了.</p>\n<p><mark>为什么优化要逆序</mark></p>\n<p>因为我们采用的是一维数组，每次都是更新此数组的每个数，我们要取得是最后一个数，因为 <code>f[j]</code> 要看数组前面的下标 <code>j-v[i]</code>，假设我们体积 j 从0开始遍历，设此时遍历到10，数组前面的数都已经在这一层更新过了，那就会出现错误了，应该让后面的下标最先遍历，后面下标遍历了一遍就用不到了。</p>\n<hr>\n<h3 id=\"完全背包问题\"><a href=\"#完全背包问题\" class=\"headerlink\" title=\"完全背包问题\"></a>完全背包问题</h3><p>有 N 种物品和一个容量是 V 的背包，每种物品都有==无限件==可用。</p>\n<p>第 i 种物品的体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。<br>输出最大价值。</p>\n<p>输入格式</p>\n<p>第一行两个整数，N，VN，V，用空格隔开，分别表示物品种数和背包容积。</p>\n<p>接下来有 N 行，每行两个整数 vi,wivi,wi，用空格隔开，分别表示第 i种物品的体积和价值。</p>\n<p>输出格式</p>\n<p>输出一个整数，表示最大价值。</p>\n<p>数据范围</p>\n<p>0&lt;N,V≤10000&lt;N,V≤1000<br>0&lt;vi,wi≤10000&lt;vi,wi≤1000</p>\n<p>输入样例</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">4 5</span><br><span class=\"line\">1 2</span><br><span class=\"line\">2 4</span><br><span class=\"line\">3 4</span><br><span class=\"line\">4 5</span><br></pre></td></tr></table></figure>\n\n<p>输出样例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">10</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/2021/05/20/%E8%83%8C%E5%8C%85%E6%B1%87%E6%80%BB/d2.png\" alt=\"d2\"></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1010</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> v[N], w[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N][N]; <span class=\"comment\">// f[i][j]表示从前i个物品中选且 V &lt;= j 最大价值，每件物品可重复选取</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n, m; <span class=\"comment\">// 物品总数和背包容积</span></span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n;i++)  cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n;i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= m;j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            f[i][j] = f[i - <span class=\"number\">1</span>][j]; <span class=\"comment\">// 第i件物品一件也不取</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j &gt;= v[i])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                f[i][j] = <span class=\"built_in\">max</span>(f[i<span class=\"number\">-1</span>][j], f[i][j - v[i]] + w[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">           </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    cout &lt;&lt; f[n][m];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><a href=\"https://www.acwing.com/video/945/\">代码优化</a>变为==一维数组==</p>\n<p>优化写法</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1010</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> v[N], w[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N]; <span class=\"comment\">// f[i][j]表示从前i个物品中选且 V &lt;= j 最大价值，每件物品可重复选取</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n, m; <span class=\"comment\">// 物品总数和背包容积</span></span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n;i++)  cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n;i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = m; j &gt;= v[i];j--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">                f[j] = <span class=\"built_in\">max</span>(f[j], f[j - v[i]] + w[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    cout &lt;&lt; f[m];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"多重背包问题-数量固定\"><a href=\"#多重背包问题-数量固定\" class=\"headerlink\" title=\"多重背包问题(数量固定)\"></a>多重背包问题(数量固定)</h3><p>有 N 种物品和一个容量是 V 的背包。</p>\n<p>第 i 种物品==最多有 s 件==，每件体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。<br>输出最大价值。</p>\n<p>输入格式</p>\n<p>第一行两个整数，N，VN，V，用空格隔开，分别表示物品种数和背包容积。</p>\n<p>接下来有 NN 行，每行三个整数 vi,wi,sivi,wi,si，用空格隔开，分别表示第 ii 种物品的体积、价值和数量。</p>\n<p>输出格式</p>\n<p>输出一个整数，表示最大价值。</p>\n<p>数据范围</p>\n<p>0&lt;N,V≤1000&lt;N,V≤100<br>0&lt;vi,wi,si≤1000&lt;vi,wi,si≤100</p>\n<p>输入样例</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">4</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">2</span> <span class=\"number\">4</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">4</span> <span class=\"number\">5</span> <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<p>输出样例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n<p>本题是01背包问题的一个演化，01背包问题中一个背包只有选与不选两种情况，在多重背包问题中每个背包(有s个背包)<code>s+1</code>种选取方法,只要再加1个循环循环取得数量即可。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">110</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> v[N], w[N], s[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N]; <span class=\"comment\">// f[i]表示体积为i的背包可以获得的最大价值 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n, m; <span class=\"comment\">// 物品总数和背包容积</span></span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n;i++)  cin &gt;&gt; v[i] &gt;&gt; w[i] &gt;&gt; s[i];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n;i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = m; j &gt;= v[i];j--) <span class=\"comment\">// 从m开始</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">1</span>; k &lt;= s[i] &amp;&amp;  k * v[i] &lt;= j;k++)</span><br><span class=\"line\">                f[j] = <span class=\"built_in\">max</span>(f[j], f[j - k * v[i]] + k *  w[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    cout &lt;&lt; f[m];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"标准朴素写法\"><a href=\"#标准朴素写法\" class=\"headerlink\" title=\"标准朴素写法\"></a>标准朴素写法</h4><figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">110</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> v[N], w[N], s[N]; </span><br><span class=\"line\"> <span class=\"comment\">// f[i][j] 表示前i件物品总重量(且总重量 &lt;= j)的最大价格</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N][N]; </span><br><span class=\"line\"><span class=\"keyword\">int</span> n, m;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++) cin &gt;&gt; v[i] &gt;&gt; w[i] &gt;&gt; s[i];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt;= s[i]; k ++)&#123; <span class=\"comment\">// 遍历物品的数量</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j &gt;=  k * v[i])&#123;</span><br><span class=\"line\">                    f[i][j] = <span class=\"built_in\">max</span>(f[i][j], f[i - <span class=\"number\">1</span>][j - k * v[i]] + k * w[i]);</span><br><span class=\"line\">                    <span class=\"comment\">// max 里面也包含了f[i - 1][j]，所以前面可以省</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; f[n][m] &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["算法"],"tags":["算法","动态规划"]}]