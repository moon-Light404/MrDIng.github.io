<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/05/19/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
  </entry>
  <entry>
    <title>大整数类</title>
    <url>/2021/05/20/%E5%A4%A7%E6%95%B4%E6%95%B0%E7%B1%BB/</url>
    <content><![CDATA[<h2 id="大整数模拟四则运算"><a href="#大整数模拟四则运算" class="headerlink" title="大整数模拟四则运算"></a>大整数模拟四则运算</h2><p>用结构体模拟大整数(很长很多位的数字)四则运算<span id="more"></span></p>
<h3 id="数组存储"><a href="#数组存储" class="headerlink" title="数组存储"></a>数组存储</h3><table><tr><td bgcolor=#54FF9F>整数高位存储在数组高位，整数的低位存储在数组的低位</td></tr></table>


<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bign</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> d[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">int</span> len; <span class="comment">// 记录长度</span></span><br><span class="line">    <span class="built_in">bign</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line">        len = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>输入大整数时，都是字符串读入，再把字符串另存至 <code>bign 结构体</code>，倒序存储</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">bign <span class="title">change</span><span class="params">(<span class="keyword">char</span> str[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    bign a;</span><br><span class="line">    a.len = <span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a.d[i] = str[len-i<span class="number">-1</span>] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="比较整数大小"><a href="#比较整数大小" class="headerlink" title=" 比较整数大小"></a><mark> 比较整数大小</mark></h3><ul>
<li>比较长度</li>
<li>如果长度相等，则从高位至低位依次比较，直到出现某一位不等，就可以找出大小。</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(bign a,bign b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.len &gt; b.len)	<span class="keyword">return</span> <span class="number">1</span>; <span class="comment">// a大</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (a.len &lt; b.len) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = a.len - <span class="number">1</span>; i &gt;= <span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a.d[i] &gt; b.d[i])	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a.d[i] &lt; b.d[i])	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">// 相等</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="大整数四则运算"><a href="#大整数四则运算" class="headerlink" title="大整数四则运算"></a>大整数四则运算</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">bign <span class="title">add</span><span class="params">(bign a,bign b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    bign c;</span><br><span class="line">    <span class="keyword">int</span> carry = <span class="number">0</span>; <span class="comment">// 进位</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.len || i &lt; b.len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = a.d[i] + b.d[i] + carry;</span><br><span class="line">        c.d[c.len++] = tmp % <span class="number">10</span>;</span><br><span class="line">        carry = tmp / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(carry != <span class="number">0</span>) <span class="comment">// 最后还剩了进位直接赋给高位</span></span><br><span class="line">    &#123;</span><br><span class="line">        c.d[c.len++] = carry;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><mark>总代码加法</mark></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 大整数高精度算法c++写法</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bign</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> d[<span class="number">1000</span>];</span><br><span class="line">	<span class="keyword">int</span> len;</span><br><span class="line">	<span class="built_in">bign</span>() &#123;</span><br><span class="line">		<span class="built_in">memset</span>(d, <span class="number">0</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">		len = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">bign <span class="title">change</span><span class="params">(string str)</span> </span>&#123;</span><br><span class="line">	bign a;</span><br><span class="line">	a.len = str.<span class="built_in">length</span>(); <span class="comment">// 数字长度</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.len; i++) &#123;</span><br><span class="line">		a.d[i] = str[a.len - i - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">bign <span class="title">add</span><span class="params">(bign a, bign b)</span> </span>&#123;</span><br><span class="line">	bign c;</span><br><span class="line">	<span class="keyword">int</span> carry = <span class="number">0</span>; <span class="comment">// 进位</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.len || i &lt; b.len; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> tmp = a.d[i] + b.d[i] + carry;</span><br><span class="line">		c.d[c.len++] = tmp % <span class="number">10</span>;</span><br><span class="line">		carry = tmp / <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (carry != <span class="number">0</span>) &#123;</span><br><span class="line">		c.d[c.len++] = carry;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string s1, s2;</span><br><span class="line">	cin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">	bign a = <span class="built_in">change</span>(s1);</span><br><span class="line">	bign b = <span class="built_in">change</span>(s2);</span><br><span class="line">	bign res = <span class="built_in">add</span>(a, b);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;结果是&quot;</span> &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = res.len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"></span><br><span class="line">		cout &lt;&lt; res.d[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="高精度减法-大数减去小数"><a href="#高精度减法-大数减去小数" class="headerlink" title="高精度减法(大数减去小数)"></a>高精度减法(大数减去小数)</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">bign <span class="title">sub</span><span class="params">(bign a,bign b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    bign c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; a.len || i &lt; b.len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a.d[i] &lt; b.d[i])</span><br><span class="line">        &#123;</span><br><span class="line">            a.d[i+<span class="number">1</span>] -= <span class="number">1</span>;</span><br><span class="line">            a.d[i] += <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        c.d[c.len++] = a.d[i] - b.d[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(c.len - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; c.d[c.len<span class="number">-1</span>] == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        c.len--; <span class="comment">// 去掉前面的0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<hr>
<h3 id="高精度乘法"><a href="#高精度乘法" class="headerlink" title="高精度乘法"></a>高精度乘法</h3><p>​     1   4  7</p>
<p>x        3   5</p>
<p>​    2    4   5</p>
<p>1  4    0</p>
<p>3   5</p>
<p>把147看作bign类型，35看作 int 类型</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">bign <span class="title">multi</span><span class="params">(bign a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    bign c;</span><br><span class="line">    <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; a.len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = a.d[i] * b + carry;</span><br><span class="line">        c.d[c.len++] = t % <span class="number">10</span>; <span class="comment">// 个位作为该位结果</span></span><br><span class="line">        carry = t / <span class="number">10</span>; <span class="comment">// 高位部分作为新的进位 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(carry != <span class="number">0</span>) <span class="comment">// 乘法可能不止一位进位</span></span><br><span class="line">    &#123;</span><br><span class="line">        c.d[c.len++] =  carry % <span class="number">10</span>;</span><br><span class="line">        carry /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
</search>
